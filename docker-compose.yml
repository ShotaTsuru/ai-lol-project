
services:
  postgres:
    image: postgres:15-alpine
    container_name: lol-ai-postgres
    environment:
      POSTGRES_DB: reverse_engineering_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lol-ai-network

  redis:
    image: redis:7-alpine
    container_name: lol-ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lol-ai-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: lol-ai-backend
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=development
      - DATABASE_URL=postgres://user:password@postgres:5432/reverse_engineering_db
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - lol-ai-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: lol-ai-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - lol-ai-network

  chromadb:
    image: chromadb/chroma:latest
    container_name: lol-ai-chromadb
    ports:
      - "8000:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - chromadb_data:/chroma/chroma
    networks:
      - lol-ai-network

volumes:
  postgres_data:
  redis_data:
  chromadb_data:

networks:
  lol-ai-network:
    driver: bridge
